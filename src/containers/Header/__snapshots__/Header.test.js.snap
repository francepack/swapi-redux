// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          className="home-direct"
          to="/"
        >
          <h1>
            <span>
              SWAPI
            </span>
             - box
          </h1>
        </Link>,
        <button
          className="display-fav"
        >
          View 
          <span>
            0
          </span>
           Favorites 
        </button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <h1>
            <span>
              SWAPI
            </span>
             - box
          </h1>,
          "className": "home-direct",
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span>
                SWAPI
              </span>,
              " - box",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "SWAPI",
              },
              "ref": null,
              "rendered": "SWAPI",
              "type": "span",
            },
            " - box",
          ],
          "type": "h1",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "View ",
            <span>
              0
            </span>,
            " Favorites ",
          ],
          "className": "display-fav",
        },
        "ref": null,
        "rendered": Array [
          "View ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "0",
            },
            "ref": null,
            "rendered": "0",
            "type": "span",
          },
          " Favorites ",
        ],
        "type": "button",
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            className="home-direct"
            to="/"
          >
            <h1>
              <span>
                SWAPI
              </span>
               - box
            </h1>
          </Link>,
          <button
            className="display-fav"
          >
            View 
            <span>
              0
            </span>
             Favorites 
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <h1>
              <span>
                SWAPI
              </span>
               - box
            </h1>,
            "className": "home-direct",
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span>
                  SWAPI
                </span>,
                " - box",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "SWAPI",
                },
                "ref": null,
                "rendered": "SWAPI",
                "type": "span",
              },
              " - box",
            ],
            "type": "h1",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "View ",
              <span>
                0
              </span>,
              " Favorites ",
            ],
            "className": "display-fav",
          },
          "ref": null,
          "rendered": Array [
            "View ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "0",
              },
              "ref": null,
              "rendered": "0",
              "type": "span",
            },
            " Favorites ",
          ],
          "type": "button",
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
